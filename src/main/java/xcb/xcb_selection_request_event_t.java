package xcb;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : xcb/xproto.h:774</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xcb_selection_request_event_t extends Structure {
	/** < */
	public byte response_type;
	/** < */
	public byte pad0;
	/** < */
	public short sequence;
	/**
	 * <<br>
	 * C type : xcb_timestamp_t
	 */
	public int time;
	/**
	 * <<br>
	 * C type : xcb_window_t
	 */
	public int owner;
	/**
	 * <<br>
	 * C type : xcb_window_t
	 */
	public int requestor;
	/**
	 * <<br>
	 * C type : xcb_atom_t
	 */
	public int selection;
	/**
	 * <<br>
	 * C type : xcb_atom_t
	 */
	public int target;
	/**
	 * <<br>
	 * C type : xcb_atom_t
	 */
	public int property;
	public xcb_selection_request_event_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("response_type", "pad0", "sequence", "time", "owner", "requestor", "selection", "target", "property");
	}
	/**
	 * @param response_type <<br>
	 * @param pad0 <<br>
	 * @param sequence <<br>
	 * @param time <<br>
	 * C type : xcb_timestamp_t<br>
	 * @param owner <<br>
	 * C type : xcb_window_t<br>
	 * @param requestor <<br>
	 * C type : xcb_window_t<br>
	 * @param selection <<br>
	 * C type : xcb_atom_t<br>
	 * @param target <<br>
	 * C type : xcb_atom_t<br>
	 * @param property <<br>
	 * C type : xcb_atom_t
	 */
	public xcb_selection_request_event_t(byte response_type, byte pad0, short sequence, int time, int owner, int requestor, int selection, int target, int property) {
		super();
		this.response_type = response_type;
		this.pad0 = pad0;
		this.sequence = sequence;
		this.time = time;
		this.owner = owner;
		this.requestor = requestor;
		this.selection = selection;
		this.target = target;
		this.property = property;
	}
	public xcb_selection_request_event_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xcb_selection_request_event_t implements Structure.ByReference {
		
	};
	public static class ByValue extends xcb_selection_request_event_t implements Structure.ByValue {
		
	};
}
