package xcb;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : xcb/xproto.h:1505</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xcb_change_active_pointer_grab_request_t extends Structure {
	/** < */
	public byte major_opcode;
	/** < */
	public byte pad0;
	/** < */
	public short length;
	/**
	 * <<br>
	 * C type : xcb_cursor_t
	 */
	public int cursor;
	/**
	 * <<br>
	 * C type : xcb_timestamp_t
	 */
	public int time;
	/** < */
	public short event_mask;
	/**
	 * <<br>
	 * C type : uint8_t[2]
	 */
	public byte[] pad1 = new byte[2];
	public xcb_change_active_pointer_grab_request_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("major_opcode", "pad0", "length", "cursor", "time", "event_mask", "pad1");
	}
	/**
	 * @param major_opcode <<br>
	 * @param pad0 <<br>
	 * @param length <<br>
	 * @param cursor <<br>
	 * C type : xcb_cursor_t<br>
	 * @param time <<br>
	 * C type : xcb_timestamp_t<br>
	 * @param event_mask <<br>
	 * @param pad1 <<br>
	 * C type : uint8_t[2]
	 */
	public xcb_change_active_pointer_grab_request_t(byte major_opcode, byte pad0, short length, int cursor, int time, short event_mask, byte pad1[]) {
		super();
		this.major_opcode = major_opcode;
		this.pad0 = pad0;
		this.length = length;
		this.cursor = cursor;
		this.time = time;
		this.event_mask = event_mask;
		if ((pad1.length != this.pad1.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.pad1 = pad1;
	}
	public xcb_change_active_pointer_grab_request_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xcb_change_active_pointer_grab_request_t implements Structure.ByReference {
		
	};
	public static class ByValue extends xcb_change_active_pointer_grab_request_t implements Structure.ByValue {
		
	};
}
