package xcb;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : xcb/xproto.h:2010</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xcb_create_pixmap_request_t extends Structure {
	/** < */
	public byte major_opcode;
	/** < */
	public byte depth;
	/** < */
	public short length;
	/**
	 * <<br>
	 * C type : xcb_pixmap_t
	 */
	public int pid;
	/**
	 * <<br>
	 * C type : xcb_drawable_t
	 */
	public int drawable;
	/** < */
	public short width;
	/** < */
	public short height;
	public xcb_create_pixmap_request_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("major_opcode", "depth", "length", "pid", "drawable", "width", "height");
	}
	/**
	 * @param major_opcode <<br>
	 * @param depth <<br>
	 * @param length <<br>
	 * @param pid <<br>
	 * C type : xcb_pixmap_t<br>
	 * @param drawable <<br>
	 * C type : xcb_drawable_t<br>
	 * @param width <<br>
	 * @param height <
	 */
	public xcb_create_pixmap_request_t(byte major_opcode, byte depth, short length, int pid, int drawable, short width, short height) {
		super();
		this.major_opcode = major_opcode;
		this.depth = depth;
		this.length = length;
		this.pid = pid;
		this.drawable = drawable;
		this.width = width;
		this.height = height;
	}
	public xcb_create_pixmap_request_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xcb_create_pixmap_request_t implements Structure.ByReference {
		
	};
	public static class ByValue extends xcb_create_pixmap_request_t implements Structure.ByValue {
		
	};
}
